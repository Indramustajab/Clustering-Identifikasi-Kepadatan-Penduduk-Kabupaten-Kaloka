# -*- coding: utf-8 -*-
"""Clustering Identifikasi Kepadatan Penduduk Kab. Kaloka.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ewm9et-jEaojxZJ_E69MGEp7V9hLahtG

Identifikasi pola-pola kepadatan penduduk yang ada di Kabupaten Kolaka

1.	Tujuan
Analisis ini dilakukan dengan tujuan untuk memperoleh pemahaman yang lebih dalam tentang sebaran populasi di Kabupaten Kolaka, yang akan memberikan dasar bagi pengambilan keputusan yang lebih baik terkait dengan pengembangan wilayah dan kebijakan publik.

2.	Variabel
Data yang akan digunakan mencakup informasi populasi, termasuk jumlah penduduk di setiap wilayah administratif, serta atribut lain yang penting seperti luas wilayah atau perkembangan ekonomi.

3.	Metode Analisis
Analisis akan menggunakan teknik clustering untuk mengelompokkan wilayah-wilayah dengan pola kepadatan penduduk yang serupa menjadi cluster-cluster yang berbeda. Teknik clustering seperti K-means, DBSCAN, atau Hierarchical Clustering mungkin akan digunakan.

4.	Data yang Dibutuhkan
Data yang diperlukan adalah data geografis yang mencakup informasi tentang lokasi dan jumlah penduduk di setiap bagian administratif Kabupaten Kolaka, serta atribut-atribut lain yang relevan.

5.	Hasil yang Diharapkan
Output yang diharapkan adalah pemetaan cluster kepadatan penduduk, yang akan membantu dalam memahami lebih baik distribusi populasi di Kabupaten Kolaka. Pemetaan ini akan berguna untuk mengenali daerah-daerah dengan kepadatan penduduk yang berbeda, serta peluang dan tantangan dalam pembangunan wilayah
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import matplotlib.pyplot as plt # for data visualization
import seaborn as sns # for statistical data visualization
# %matplotlib inline

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

import warnings

warnings.filterwarnings('ignore')

"""2. Memasukkan Dataset"""

data = '/kaggle/Data Penduduk Kab Kolaka.csv'
df = pd.read_csv(data)

"""3. Pemerikasaan bentuk (shape) dari dataset"""

df.shape

df.head()

"""

**1**.   **Distributions**

Disini dapat dilihat dari 5 data yang disimulasikan memiliki grafik seperti gambar diatas. Dari jumlah penduduk memiliki keterikatan dengan nilai frekuensi begitu juga dengan luas wilayah yang saling berkaitan dengan nilai frekuensi juga.

**2**. **Categorical distributions**

Berikut ini merupakan dari 5 daerah yang dibuat dalam bentuk diagram bar dengan acuan banyaknya penduduk dalam suatu wilayah dengan menggunakan frekuensi.

**3**. **Values**

Berikut ini merupakan penempatan pointing dari setiap nilai luasan wilayah dari setiap nama daerah yang tertera.


**4**. **Faceted distributions**

Dari gambar berikut ini dari 2 data set terlihat jika grafik diagram yang tergambarkan bahwa daerah yang memiliki sedikit penduduk masih sangat banyak dan luasan wilayah yang cukup kecil.

"""

df.info()

df.isnull().sum()

df.describe()

"""**1**.   **Distributions**

Berikut ini merupakan gambaran dari semua data yang ada dan menggunakan nilai rata-rata, minimal, penjumlahan, dan nilai maksimal. Dari gambar tabel tersebut merupakan hasil dari nilai jumlah penduduk menggunakan mean.

**2**. **2-d distributions**

Berikut ini merupakan hasil dari pointing dalam bentuk 2D yang merupakan hasil dari luasan wilayah dalam bentuk nilai floating yang beracuan pada jumlah penduduk.

**3**. **Values**

Grafik values tersebut terkait distribusi antara kedua variabel seperti sebaran data, pola konsentrasi data di sekitar nilai-nilai tertentu, serta apakah distribusi data tersebut normal atau tidak.

●	Untuk Variabel “Jumlah”
-	Count: Jumlah total pengamatan yang tersedia untuk variabel “Jumlah”. Dalam kasus ini, terdapat 135 pengamatan.
-	Mean: Rata-rata dari variabel “Jumlah”. Nilainya adalah 1766.748148.
-	Std: Standar deviasi dari variabel “Jumlah”. Ini menunjukkan seberapa jauh nilai-nilai “Jumlah” tersebar dari rata-ratanya. Nilainya adalah 1624.108507.
-	Min: Nilai minimum dari variabel “Jumlah”. Nilai terendah adalah 261.
-	25%: Kuartil pertama dari variabel “Jumlah”. Ini menunjukkan nilai di mana 25% dari data berada di bawahnya. Nilainya adalah 870.5.
-	50%: Median dari variabel “Jumlah”. Nilai median (atau kuartil kedua) adalah 1263.
-	75%: Kuartil ketiga dari variabel “Jumlah”. Ini menunjukkan nilai di mana 75% dari data berada di bawahnya. Nilainya adalah 1973.
-	max: Nilai maksimum dari variabel “Jumlah”. Nilai tertinggi adalah 9078.

●	Untuk Variabel “Luas Wilayah”
-	Count: Jumlah total pengamatan yang tersedia untuk variabel "Luas Wilayah". Dalam kasus ini, juga terdapat 135 pengamatan.
-	Mean: Rata-rata dari variabel “Luas Wilayah”. Nilainya adalah 22.517778.
-	Std: Standar deviasi dari variabel “Luas Wilayah”. Nilainya adalah 26.768374.
-	Min: Nilai minimum dari variabel “Luas Wilayah”. Nilai terendah adalah 0.3.
-	25%: Kuartil pertama dari variabel “Luas Wilayah”. Nilainya adalah 4.34.
-	50%: Median dari variabel “Luas Wilayah”. Nilai median adalah 12.42.
-	75%: Kuartil ketiga dari variabel “Luas Wilayah”. Nilainya adalah 30.815.
-	Max: Nilai maksimum dari variabel “Luas Wilayah”. Nilai tertinggi adalah 134.38

"""

plt.figure(figsize=(20, 10))
plt.scatter(df['Luas Wilayah'], df['Jumlah'])
plt.xlabel("Luas Wilayah")
plt.ylabel("Jumlah Penduduk")
plt.title("Grafik Kepadatan Penduduk")
plt.legend()
plt.show()

"""Berikut diatas merupakan hasil analisa dari semua data dalam bentuk gambaran 2D menggunakan pointing yang disesuaikan dengan nilai dari data sebelumnya."""

X = df[['Luas Wilayah','Jumlah']].values #pembuatan data training

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()
x = scaler.fit_transform(X) #feature scaling

x

scaled_df = pd.DataFrame(x, columns=['Luas Wilayah', 'Jumlah Penduduk'])
print(scaled_df)

from sklearn.cluster import KMeans
kmeans = KMeans(n_clusters=3, random_state=0)
kmeans.fit(x)

y_cluster = kmeans.fit_predict(x)

y_cluster

df['Cluster'] = y_cluster

df.head(80)

"""

**1**.   **Distributions**

Gambar berikut hasil dari penerapan data setelah dilakukan normalisasi data dan diubah dalam bentuk diagram batang sehingga dapat dilihat secara lebih jelas dari setiap daerah.

**2**. **2-d distributions**

Sedangkan gambar berikut ini merupakan hasil pemetaan pointing dalam bentuk 2D. Dapat dilihat terdapat 2 simulasi gambar dengan pemetaan secara luas, sedangkan pada gambar bagian kanan merupakan hasil dari pointing linear.

**3**. **Values**

- Gambar pertama merupakan hasil grafik dari continue, jumlah penduduk disetiap daerah dengan menggunakan acuan jumlah banyaknya daerah yang masuk.
- Gambar kedua merupakan hasil grafik dari continue, luas wilayah yang memiliki acuan dengan banyak daerah yang sama dengan nilai dari setiap stepnya.
- Gambar ketiga merupakan grafik dari clustering dari kedua data tersebut dengan memperhitungkan daerah mana saja yang termasuk dalam pusat pointing yang sudah di buat.
"""

kmeans.cluster_centers_

plt.figure(figsize=(20, 10))
plt.scatter(x[:,0],x[:,1],c=kmeans.labels_)
plt.scatter(kmeans.cluster_centers_[0,0],kmeans.cluster_centers_[0,1],cmap='rainbow',marker='*',s=150,label='Centroid 0')
plt.scatter(kmeans.cluster_centers_[1,0],kmeans.cluster_centers_[1,1],cmap='rainbow',marker='*',s=150,label='Centroid 1')
plt.scatter(kmeans.cluster_centers_[2,0],kmeans.cluster_centers_[2,1],cmap='rainbow',marker='*',s=150,label='Centroid 2')

plt.xlabel("Luas Wilayah")
plt.ylabel("Jumlah")
plt.legend()

"""***Print out K-Means***

Dari semua proses yang sudah dilakukan baik dari normalisasi data, pemetaan awal, dan lain-lain. Maka hasil output dari setiap proses tersebut ada dalam gambar diatas. Jika dilihat dari hasil akhir gambar tersebut, terdapat 3 titik utama sebagai titik acuan jarak terdekat dari tiap-tiap daerah yang ada. Sehingga dapat disimpulkan bahwa tiap-tiap daerah pasti memiliki suatu pusat yang memiliki jarak terdekat. Maka dari hasil tersebut dapat digunakan sebagai bahan pemerataan penduduk di setiap daerah yang ada sehingga di setiap daerah tidak ada penduduk yang memiliki warga yang begitu banyak atau mengurangi kepadatan penduduk.
"""

from sklearn.metrics import silhouette_score

silhouette_avg = silhouette_score(x, kmeans.labels_)
print("Silhouette Coefficient:", silhouette_avg)

from sklearn.cluster import KMeans
cs = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters = i)
    kmeans.fit(x)
    cs.append(kmeans.inertia_)
cs

plt.plot(range(1, 11), cs)
plt.title('The Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('CS')
plt.show()

"""
***Grafik dengan elbow method***

Pada grafik Elbow Method tersebut, akan dicari titik di mana penurunan nilai CS mulai melambat secara signifikan, membentuk sudut yang mirip dengan siku pada siku. Titik ini menandakan jumlah klaster yang optimal untuk data tersebut. Pada jumlah klaster akan dipilih sesuai dengan titik siku yang tertera tersebut. Pada grafik, dapat dilihat jika grafik tersebut setelah jumlah klaster 3, penurunan nilai CS tidak lagi signifikan, maka akan dipilih 3 sebagai jumlah klaster yang optimal untuk model. Setelah menentukan jumlah klaster optimal, dapat dilanjutkan dengan menggunakan jumlah klaster tersebut untuk melakukan klasterisasi pada dataset."""

df['Cluster'] = df['Cluster'].replace([0,1,2],['Padat','Sangat Padat','Sedang'])

print(df.head(60))

print(df.iloc[60:75])

print(df.tail(60))

"""***kESIMPULAN***

---



Hasil dari seluruh proses yang telah dilakukan, termasuk normalisasi data dan pemetaan awal, beserta langkah-langkah lainnya, tercermin dalam gambar yang ditampilkan di atas. Melalui analisis visual dari gambar akhir tersebut, dapat terlihat bahwa ada tiga titik pusat utama yang mewakili centroid dari setiap klaster yang dibentuk. Titik-titik ini berperan sebagai referensi jarak terdekat dari setiap daerah yang telah dikelompokkan ke dalam klaster. Dengan demikian, dapat diambil kesimpulan bahwa setiap daerah memiliki pusat klaster yang menjadi titik fokus terdekat bagi penduduk di daerah tersebut. Fenomena ini menunjukkan bahwa data populasi di berbagai daerah telah berhasil dikelompokkan ke dalam klaster dengan karakteristik yang serupa. Hasil klasterisasi ini dapat digunakan sebagai landasan untuk merencanakan pemerataan populasi di setiap daerah, dengan tujuan untuk mengurangi ketidakseimbangan jumlah penduduk yang mungkin terjadi atau kepadatan populasi yang berlebihan di suatu wilayah. Dengan demikian, pelaksanaan rencana pemerataan populasi berdasarkan hasil klasterisasi ini berpotensi membantu dalam menjaga distribusi penduduk yang lebih merata dan seimbang di seluruh wilayah.
"""